{
  "openapi": "3.1.0",
  "info": {
    "title": "Transformerlab API",
    "summary": "An API for working with LLMs.",
    "description": "Transformerlab API helps you do awesome stuff. ðŸš€",
    "termsOfService": "http://example.com/terms/",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/healthz": {
      "get": {
        "tags": ["model"],
        "summary": "Healthz",
        "operationId": "healthz_healthz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/gallery": {
      "get": {
        "tags": ["model"],
        "summary": "Model Gallery List All",
        "operationId": "model_gallery_list_all_model_gallery_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/gallery/sizes": {
      "get": {
        "tags": ["model"],
        "summary": "Model Gallery Update Sizes",
        "description": "TEMP INTERNAL TOOL\nCalculates updated sizes for all models in the gallery and prints.",
        "operationId": "model_gallery_update_sizes_model_gallery_sizes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/gallery/{model_id}": {
      "get": {
        "tags": ["model"],
        "summary": "Model Gallery",
        "operationId": "model_gallery_model_gallery__model_id__get",
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Model Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/upload_to_huggingface": {
      "get": {
        "tags": ["model"],
        "summary": "Given a model ID, upload it to Hugging Face.",
        "description": "Given a model ID, upload it to Hugging Face.",
        "operationId": "upload_model_to_huggingface_model_upload_to_huggingface_get",
        "parameters": [
          {
            "name": "model_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model Id" }
          },
          {
            "name": "model_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "transformerlab-model",
              "title": "Model Name"
            }
          },
          {
            "name": "organization_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Organization Name"
            }
          },
          {
            "name": "model_card_data",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "{}",
              "title": "Model Card Data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/local/{model_id}": {
      "get": {
        "tags": ["model"],
        "summary": "Model Details From Source",
        "operationId": "model_details_from_source_model_local__model_id__get",
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Model Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/details/{model_id}": {
      "get": {
        "tags": ["model"],
        "summary": "Model Details From Filesystem",
        "operationId": "model_details_from_filesystem_model_details__model_id__get",
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Model Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/login_to_huggingface": {
      "get": {
        "tags": ["model"],
        "summary": "Login To Huggingface",
        "operationId": "login_to_huggingface_model_login_to_huggingface_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/login_to_wandb": {
      "get": {
        "tags": ["model"],
        "summary": "Login To Wandb",
        "operationId": "login_to_wandb_model_login_to_wandb_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/test_wandb_login": {
      "get": {
        "tags": ["model"],
        "summary": "Test Wandb Login",
        "operationId": "test_wandb_login_model_test_wandb_login_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/set_openai_api_key": {
      "get": {
        "tags": ["model"],
        "summary": "Set Openai Api Key",
        "operationId": "set_openai_api_key_model_set_openai_api_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/set_anthropic_api_key": {
      "get": {
        "tags": ["model"],
        "summary": "Set Anthropic Api Key",
        "operationId": "set_anthropic_api_key_model_set_anthropic_api_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/set_custom_api_key": {
      "get": {
        "tags": ["model"],
        "summary": "Set Custom Api Key",
        "operationId": "set_custom_api_key_model_set_custom_api_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/check_openai_api_key": {
      "get": {
        "tags": ["model"],
        "summary": "Check Openai Api Key",
        "operationId": "check_openai_api_key_model_check_openai_api_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/check_anthropic_api_key": {
      "get": {
        "tags": ["model"],
        "summary": "Check Anthropic Api Key",
        "operationId": "check_anthropic_api_key_model_check_anthropic_api_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/check_custom_api_key": {
      "get": {
        "tags": ["model"],
        "summary": "Check Custom Api Key",
        "operationId": "check_custom_api_key_model_check_custom_api_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/download_size": {
      "get": {
        "tags": ["model"],
        "summary": "Get Model Download Size",
        "operationId": "get_model_download_size_model_download_size_get",
        "parameters": [
          {
            "name": "model_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model Id" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_model_download_size_model_download_size_get"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/download_from_huggingface": {
      "get": {
        "tags": ["model"],
        "summary": "Download Model By Huggingface Id",
        "description": "Takes a specific model string that must match huggingface ID to download\nThis function will not be able to infer out description etc of the model\nsince it is not in the gallery",
        "operationId": "download_model_by_huggingface_id_model_download_from_huggingface_get",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model" }
          },
          {
            "name": "job_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/download_model_from_gallery": {
      "get": {
        "tags": ["model"],
        "summary": "Download Model From Gallery",
        "description": "Provide a reference to a model in the gallery, and we will download it\nfrom huggingface\n\nYou can manually specify a pre-created job_id if you want to track the progress of the download with\na defined job_id provided by the API using /job/createId",
        "operationId": "download_model_from_gallery_model_download_model_from_gallery_get",
        "parameters": [
          {
            "name": "gallery_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Gallery Id" }
          },
          {
            "name": "job_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/get_conversation_template": {
      "get": {
        "tags": ["model"],
        "summary": "Get Model Prompt Template",
        "operationId": "get_model_prompt_template_model_get_conversation_template_get",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/list": {
      "get": {
        "tags": ["model"],
        "summary": "Model Local List",
        "operationId": "model_local_list_model_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/count_downloaded": {
      "get": {
        "tags": ["model"],
        "summary": "Model Count Downloaded",
        "operationId": "model_count_downloaded_model_count_downloaded_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/model/create": {
      "get": {
        "tags": ["model"],
        "summary": "Model Local Create",
        "operationId": "model_local_create_model_create_get",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Id" }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          },
          {
            "name": "json_data",
            "in": "query",
            "required": false,
            "schema": { "default": {}, "title": "Json Data" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/delete": {
      "get": {
        "tags": ["model"],
        "summary": "Model Local Delete",
        "operationId": "model_local_delete_model_delete_get",
        "parameters": [
          {
            "name": "model_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/pefts": {
      "post": {
        "tags": ["model"],
        "summary": "Model Gets Pefts",
        "operationId": "model_gets_pefts_model_pefts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "type": "string", "title": "Model Id" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/delete_peft": {
      "get": {
        "tags": ["model"],
        "summary": "Model Delete Peft",
        "operationId": "model_delete_peft_model_delete_peft_get",
        "parameters": [
          {
            "name": "model_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model Id" }
          },
          {
            "name": "peft",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Peft" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/get_local_hfconfig": {
      "get": {
        "tags": ["model"],
        "summary": "Get Local Hfconfig",
        "description": "Returns the config.json file for a model stored in the local filesystem",
        "operationId": "get_local_hfconfig_model_get_local_hfconfig_get",
        "parameters": [
          {
            "name": "model_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/list_local_uninstalled": {
      "get": {
        "tags": ["model"],
        "summary": "Models List Local Uninstalled",
        "operationId": "models_list_local_uninstalled_model_list_local_uninstalled_get",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "", "title": "Path" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/import_from_source": {
      "get": {
        "tags": ["model"],
        "summary": "Model Import Local Source",
        "description": "Given a model_source and a model_id within that source,\ntry to import a file into TransformerLab.",
        "operationId": "model_import_local_source_model_import_from_source_get",
        "parameters": [
          {
            "name": "model_source",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model Source" }
          },
          {
            "name": "model_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/model/import_from_local_path": {
      "get": {
        "tags": ["model"],
        "summary": "Model Import Local Path",
        "description": "Given model_path pointing to a local directory of a file,\ntry to import a model into Transformer Lab.",
        "operationId": "model_import_local_path_model_import_from_local_path_get",
        "parameters": [
          {
            "name": "model_path",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model Path" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/server/info": {
      "get": {
        "tags": ["serverinfo"],
        "summary": "Get Computer Information",
        "operationId": "get_computer_information_server_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/server/python_libraries": {
      "get": {
        "tags": ["serverinfo"],
        "summary": "Get Python Library Versions",
        "operationId": "get_python_library_versions_server_python_libraries_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/server/pytorch_collect_env": {
      "get": {
        "tags": ["serverinfo"],
        "summary": "Get Pytorch Collect Env",
        "operationId": "get_pytorch_collect_env_server_pytorch_collect_env_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/server/stream_log": {
      "get": {
        "tags": ["serverinfo"],
        "summary": "Watch Log",
        "operationId": "watch_log_server_stream_log_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/train/template/create": {
      "post": {
        "tags": ["train"],
        "summary": "Create Training Template",
        "operationId": "create_training_template_train_template_create_post",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          },
          {
            "name": "description",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Description" }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Type" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_training_template_train_template_create_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/train/templates": {
      "get": {
        "tags": ["train"],
        "summary": "Get Training Templates",
        "operationId": "get_training_templates_train_templates_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/train/template/{template_id}/delete": {
      "get": {
        "tags": ["train"],
        "summary": "Delete Training Template",
        "operationId": "delete_training_template_train_template__template_id__delete_get",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Template Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/train/template/import": {
      "post": {
        "tags": ["train"],
        "summary": "Import Recipe",
        "operationId": "import_recipe_train_template_import_post",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "type": "string", "title": "Recipe Yaml" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/train/template/{template_id}/export": {
      "get": {
        "tags": ["train"],
        "summary": "Export Recipe",
        "operationId": "export_recipe_train_template__template_id__export_get",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Template Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "text/plain": { "schema": { "type": "string" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/train/template/gallery": {
      "get": {
        "tags": ["train"],
        "summary": "Recipe Gallery Get All",
        "operationId": "recipe_gallery_get_all_train_template_gallery_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/train/job/{job_id}": {
      "get": {
        "tags": ["train"],
        "summary": "Get Training Job",
        "operationId": "get_training_job_train_job__job_id__get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/train/job/{job_id}/output": {
      "get": {
        "tags": ["train"],
        "summary": "Get Training Job Output",
        "operationId": "get_training_job_output_train_job__job_id__output_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/train/job/{job_id}/stream_output": {
      "get": {
        "tags": ["train"],
        "summary": "Watch Log",
        "operationId": "watch_log_train_job__job_id__stream_output_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/train/tensorboard/stop": {
      "get": {
        "tags": ["train"],
        "summary": "Stop Tensorboard",
        "operationId": "stop_tensorboard_train_tensorboard_stop_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/train/tensorboard/start": {
      "get": {
        "tags": ["train"],
        "summary": "Start Tensorboard",
        "operationId": "start_tensorboard_train_tensorboard_start_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/data/gallery": {
      "get": {
        "tags": ["datasets"],
        "summary": "Display the datasets available in the dataset gallery.",
        "operationId": "dataset_gallery_data_gallery_get",
        "responses": {
          "200": {
            "description": "Successful response. Data is a list of column names followed by data, which can be of any datatype.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse",
                  "title": "Response Dataset Gallery Data Gallery Get"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/data/info": {
      "get": {
        "tags": ["datasets"],
        "summary": "Fetch the details of a particular dataset.",
        "operationId": "dataset_info_data_info_get",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Dataset Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/data/preview": {
      "get": {
        "tags": ["datasets"],
        "summary": "Preview the contents of a dataset.",
        "operationId": "dataset_preview_data_preview_get",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset to preview. This can be a HuggingFace dataset ID or a local dataset ID.",
              "title": "Dataset Id"
            },
            "description": "The ID of the dataset to preview. This can be a HuggingFace dataset ID or a local dataset ID."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "The starting index from where to fetch the data.",
              "default": 0,
              "title": "Offset"
            },
            "description": "The starting index from where to fetch the data."
          },
          {
            "name": "split",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The split to preview. This can be train, test, or validation.",
              "title": "Split"
            },
            "description": "The split to preview. This can be train, test, or validation."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The maximum number of data items to fetch.",
              "default": 10,
              "title": "Limit"
            },
            "description": "The maximum number of data items to fetch."
          },
          {
            "name": "streaming",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Streaming"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. Data is a list of column names followed by data, which can be of any datatype.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Dataset Preview Data Preview Get",
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/data/preview_with_template": {
      "get": {
        "tags": ["datasets"],
        "summary": "Preview the contents of a dataset after applying a jinja template to it.",
        "operationId": "dataset_preview_with_template_data_preview_with_template_get",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the dataset to preview. This can be a HuggingFace dataset ID or a local dataset ID.",
              "title": "Dataset Id"
            },
            "description": "The ID of the dataset to preview. This can be a HuggingFace dataset ID or a local dataset ID."
          },
          {
            "name": "template",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "", "title": "Template" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "The starting index from where to fetch the data.",
              "default": 0,
              "title": "Offset"
            },
            "description": "The starting index from where to fetch the data."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "The maximum number of data items to fetch.",
              "default": 10,
              "title": "Limit"
            },
            "description": "The maximum number of data items to fetch."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response. Data is a list of column names followed by data, which can be of any datatype.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Dataset Preview With Template Data Preview With Template Get",
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/data/download": {
      "get": {
        "tags": ["datasets"],
        "summary": "Download a dataset from the HuggingFace Hub to the LLMLab server.",
        "operationId": "dataset_download_data_download_get",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Dataset Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/data/list": {
      "get": {
        "tags": ["datasets"],
        "summary": "List available datasets.",
        "operationId": "dataset_list_data_list_get",
        "parameters": [
          {
            "name": "generated",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Generated"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/data/generated_datasets_list": {
      "get": {
        "tags": ["datasets"],
        "summary": "List available generated datasets.",
        "operationId": "generated_datasets_list_data_generated_datasets_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/data/new": {
      "get": {
        "tags": ["datasets"],
        "summary": "Create a new dataset.",
        "operationId": "dataset_new_data_new_get",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Dataset Id" }
          },
          {
            "name": "generated",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Generated"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/data/delete": {
      "get": {
        "tags": ["datasets"],
        "summary": "Delete a dataset.",
        "operationId": "dataset_delete_data_delete_get",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Dataset Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/data/fileupload": {
      "post": {
        "tags": ["datasets"],
        "summary": "Upload the contents of a dataset.",
        "operationId": "create_upload_file_data_fileupload_post",
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Dataset Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_upload_file_data_fileupload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/rag/query": {
      "get": {
        "tags": ["rag", "rag"],
        "summary": "Query",
        "description": "Query the RAG engine",
        "operationId": "query_experiment__experimentId__rag_query_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Experimentid" }
          },
          {
            "name": "query",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Query" }
          },
          {
            "name": "settings",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Settings" }
          },
          {
            "name": "rag_folder",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "rag",
              "title": "Rag Folder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/rag/reindex": {
      "get": {
        "tags": ["rag", "rag"],
        "summary": "Reindex",
        "description": "Reindex the RAG engine",
        "operationId": "reindex_experiment__experimentId__rag_reindex_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Experimentid" }
          },
          {
            "name": "rag_folder",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "rag",
              "title": "Rag Folder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/documents/open/{document_name}": {
      "get": {
        "tags": ["documents", "documents"],
        "summary": "View the contents of a document.",
        "operationId": "document_view_experiment__experimentId__documents_open__document_name__get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Experimentid" }
          },
          {
            "name": "document_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Document Name" }
          },
          {
            "name": "folder",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Folder" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/documents/list": {
      "get": {
        "tags": ["documents", "documents"],
        "summary": "List available documents.",
        "operationId": "document_list_experiment__experimentId__documents_list_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Experimentid" }
          },
          {
            "name": "folder",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Folder" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/documents/new": {
      "get": {
        "tags": ["documents", "documents"],
        "summary": "Create a new document.",
        "operationId": "document_new_experiment__experimentId__documents_new_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Experimentid" }
          },
          {
            "name": "dataset_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Dataset Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/documents/delete/{document_name}": {
      "get": {
        "tags": ["documents", "documents"],
        "summary": "Delete a document.",
        "operationId": "delete_document_experiment__experimentId__documents_delete__document_name__get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Experimentid" }
          },
          {
            "name": "document_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Document Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/documents/upload": {
      "post": {
        "tags": ["documents", "documents"],
        "summary": "Upload the contents of a document.",
        "operationId": "document_upload_experiment__experimentId__documents_upload_post",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Experimentid" }
          },
          {
            "name": "folder",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Folder" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_document_upload_experiment__experimentId__documents_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/documents/create_folder": {
      "post": {
        "tags": ["documents", "documents"],
        "summary": "Create a new folder.",
        "operationId": "create_folder_experiment__experimentId__documents_create_folder_post",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Experimentid" }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/plugins/list": {
      "get": {
        "tags": ["plugins", "plugins"],
        "summary": "Experiment List Scripts",
        "description": "List all the scripts in the experiment",
        "operationId": "experiment_list_scripts_experiment__id__plugins_list_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id" }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Type" }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Filter" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/plugins/install_plugin_to_experiment": {
      "get": {
        "tags": ["plugins", "plugins"],
        "summary": "Install Plugin To Experiment",
        "operationId": "install_plugin_to_experiment_experiment__id__plugins_install_plugin_to_experiment_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id" }
          },
          {
            "name": "plugin_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Plugin Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/plugins/delete_plugin_from_experiment": {
      "get": {
        "tags": ["plugins", "plugins"],
        "summary": "Delete Plugin From Experiment",
        "operationId": "delete_plugin_from_experiment_experiment__id__plugins_delete_plugin_from_experiment_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id" }
          },
          {
            "name": "plugin_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Plugin Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/plugins/download": {
      "get": {
        "tags": ["plugins", "plugins"],
        "summary": "Download a dataset to the LLMLab server.",
        "description": "Download a plugin and install to a local list of available plugins",
        "operationId": "plugin_download_experiment__id__plugins_download_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id" }
          },
          {
            "name": "plugin_slug",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Plugin Slug" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/plugins/{pluginId}/save_file_contents": {
      "post": {
        "tags": ["plugins", "plugins"],
        "summary": "Plugin Save File Contents",
        "operationId": "plugin_save_file_contents_experiment__id__plugins__pluginId__save_file_contents_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id" }
          },
          {
            "name": "pluginId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Pluginid" }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Filename" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "type": "string", "title": "File Contents" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/plugins/{pluginId}/file_contents": {
      "get": {
        "tags": ["plugins", "plugins"],
        "summary": "Plugin Get File Contents",
        "operationId": "plugin_get_file_contents_experiment__id__plugins__pluginId__file_contents_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id" }
          },
          {
            "name": "pluginId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Pluginid" }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Filename" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/plugins/{pluginId}/list_files": {
      "get": {
        "tags": ["plugins", "plugins"],
        "summary": "Plugin List Files",
        "operationId": "plugin_list_files_experiment__id__plugins__pluginId__list_files_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id" }
          },
          {
            "name": "pluginId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Pluginid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/plugins/{pluginId}/create_new_file": {
      "get": {
        "tags": ["plugins", "plugins"],
        "summary": "Plugin Create New File",
        "operationId": "plugin_create_new_file_experiment__id__plugins__pluginId__create_new_file_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id" }
          },
          {
            "name": "pluginId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Pluginid" }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Filename" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/plugins/{pluginId}/delete_file": {
      "get": {
        "tags": ["plugins", "plugins"],
        "summary": "Plugin Delete File",
        "operationId": "plugin_delete_file_experiment__id__plugins__pluginId__delete_file_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id" }
          },
          {
            "name": "pluginId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Pluginid" }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Filename" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/plugins/new_plugin": {
      "get": {
        "tags": ["plugins", "plugins"],
        "summary": "Plugin New Plugin Directory",
        "operationId": "plugin_new_plugin_directory_experiment__id__plugins_new_plugin_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Id" }
          },
          {
            "name": "pluginId",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Pluginid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/conversations/list": {
      "get": {
        "tags": ["conversations", "conversations"],
        "summary": "Get Conversations",
        "operationId": "get_conversations_experiment__experimentId__conversations_list_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/conversations/save": {
      "post": {
        "tags": ["conversations", "conversations"],
        "summary": "Save Conversation",
        "operationId": "save_conversation_experiment__experimentId__conversations_save_post",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_save_conversation_experiment__experimentId__conversations_save_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/conversations/delete": {
      "delete": {
        "tags": ["conversations", "conversations"],
        "summary": "Delete Conversation",
        "operationId": "delete_conversation_experiment__experimentId__conversations_delete_delete",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          },
          {
            "name": "conversation_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Conversation Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/export/run_exporter_script": {
      "get": {
        "tags": ["export", "export"],
        "summary": "Run Exporter Script",
        "description": "plugin_name: the id of the exporter plugin to run\nplugin_architecture: A string containing the standard name of plugin architecture\nplugin_params: a string of JSON containing parameters for this plugin (found in plugins info.json)",
        "operationId": "run_exporter_script_experiment__id__export_run_exporter_script_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id" }
          },
          {
            "name": "plugin_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Plugin Name" }
          },
          {
            "name": "plugin_architecture",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Plugin Architecture" }
          },
          {
            "name": "plugin_params",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "{}",
              "title": "Plugin Params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/export/jobs": {
      "get": {
        "tags": ["export", "export"],
        "summary": "Get Export Jobs",
        "operationId": "get_export_jobs_experiment__id__export_jobs_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/export/job": {
      "get": {
        "tags": ["export", "export"],
        "summary": "Get Export Job",
        "operationId": "get_export_job_experiment__id__export_job_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Id" }
          },
          {
            "name": "jobId",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Jobid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/evals/add": {
      "post": {
        "tags": ["evals", "evals"],
        "summary": "Experiment Add Evaluation",
        "description": "Add an evaluation to an experiment. This will create a new directory in the experiment\nand add global plugin to the specific experiment. By copying the plugin to the experiment\ndirectory, we can modify the plugin code for the specific experiment without affecting\nother experiments that use the same plugin.",
        "operationId": "experiment_add_evaluation_experiment__experimentId__evals_add_post",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "title": "Plugin" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/evals/delete": {
      "get": {
        "tags": ["evals", "evals"],
        "summary": "Experiment Delete Eval",
        "description": "Delete an evaluation from an experiment. This will delete the directory in the experiment\nand remove the global plugin from the specific experiment.",
        "operationId": "experiment_delete_eval_experiment__experimentId__evals_delete_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          },
          {
            "name": "eval_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Eval Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/evals/edit": {
      "post": {
        "tags": ["evals", "evals"],
        "summary": "Edit Evaluation Task",
        "description": "Get the contents of the evaluation",
        "operationId": "edit_evaluation_task_experiment__experimentId__evals_edit_post",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "title": "Plugin" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/evals/get_evaluation_plugin_file_contents": {
      "get": {
        "tags": ["evals", "evals"],
        "summary": "Get Evaluation Plugin File Contents",
        "operationId": "get_evaluation_plugin_file_contents_experiment__experimentId__evals_get_evaluation_plugin_file_contents_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          },
          {
            "name": "plugin_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Plugin Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/evals/run_evaluation_script": {
      "get": {
        "tags": ["evals", "evals"],
        "summary": "Run Evaluation Script",
        "operationId": "run_evaluation_script_experiment__experimentId__evals_run_evaluation_script_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          },
          {
            "name": "plugin_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Plugin Name" }
          },
          {
            "name": "eval_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Eval Name" }
          },
          {
            "name": "job_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/evals/get_output": {
      "get": {
        "tags": ["evals", "evals"],
        "summary": "Get Output",
        "description": "Get the output of an evaluation",
        "operationId": "get_output_experiment__experimentId__evals_get_output_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          },
          {
            "name": "eval_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Eval Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/generations/add": {
      "post": {
        "tags": ["generations", "generations"],
        "summary": "Experiment Add Generation",
        "description": "Add an evaluation to an experiment. This will create a new directory in the experiment\nand add global plugin to the specific experiment. By copying the plugin to the experiment\ndirectory, we can modify the plugin code for the specific experiment without affecting\nother experiments that use the same plugin.",
        "operationId": "experiment_add_generation_experiment__experimentId__generations_add_post",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "title": "Plugin" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/generations/delete": {
      "get": {
        "tags": ["generations", "generations"],
        "summary": "Experiment Delete Generation",
        "description": "Delete an evaluation from an experiment. This will delete the directory in the experiment\nand remove the global plugin from the specific experiment.",
        "operationId": "experiment_delete_generation_experiment__experimentId__generations_delete_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          },
          {
            "name": "generation_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Generation Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/generations/edit": {
      "post": {
        "tags": ["generations", "generations"],
        "summary": "Edit Evaluation Generation",
        "description": "Get the contents of the evaluation",
        "operationId": "edit_evaluation_generation_experiment__experimentId__generations_edit_post",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "title": "Plugin" } } }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/generations/get_generation_plugin_file_contents": {
      "get": {
        "tags": ["generations", "generations"],
        "summary": "Get Generation Plugin File Contents",
        "operationId": "get_generation_plugin_file_contents_experiment__experimentId__generations_get_generation_plugin_file_contents_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          },
          {
            "name": "plugin_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Plugin Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/generations/run_generation_script": {
      "get": {
        "tags": ["generations", "generations"],
        "summary": "Run Generation Script",
        "operationId": "run_generation_script_experiment__experimentId__generations_run_generation_script_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          },
          {
            "name": "plugin_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Plugin Name" }
          },
          {
            "name": "generation_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Generation Name" }
          },
          {
            "name": "job_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{experimentId}/generations/get_output": {
      "get": {
        "tags": ["generations", "generations"],
        "summary": "Get Output",
        "description": "Get the output of an evaluation",
        "operationId": "get_output_experiment__experimentId__generations_get_output_get",
        "parameters": [
          {
            "name": "experimentId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Experimentid" }
          },
          {
            "name": "generation_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Generation Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/": {
      "get": {
        "tags": ["experiment"],
        "summary": "Get all Experiments",
        "description": "Get a list of all experiments",
        "operationId": "experiments_get_all_experiment__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/experiment/create": {
      "get": {
        "tags": ["experiment"],
        "summary": "Create Experiment",
        "operationId": "experiments_create_experiment_create_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}": {
      "get": {
        "tags": ["experiment"],
        "summary": "Get Experiment by ID",
        "operationId": "experiment_get_experiment__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "integer" }],
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/delete": {
      "get": {
        "tags": ["experiment"],
        "summary": "Experiments Delete",
        "operationId": "experiments_delete_experiment__id__delete_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "integer" }],
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/update": {
      "get": {
        "tags": ["experiment"],
        "summary": "Experiments Update",
        "operationId": "experiments_update_experiment__id__update_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "integer" }],
              "title": "Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/update_config": {
      "get": {
        "tags": ["experiment"],
        "summary": "Experiments Update Config",
        "operationId": "experiments_update_config_experiment__id__update_config_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "integer" }],
              "title": "Id"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Key" }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Value" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/prompt": {
      "post": {
        "tags": ["experiment"],
        "summary": "Experiments Save Prompt Template",
        "operationId": "experiments_save_prompt_template_experiment__id__prompt_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "integer" }],
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "type": "string", "title": "Template" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/save_file_contents": {
      "post": {
        "tags": ["experiment"],
        "summary": "Experiment Save File Contents",
        "operationId": "experiment_save_file_contents_experiment__id__save_file_contents_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "integer" }],
              "title": "Id"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Filename" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "type": "string", "title": "File Contents" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/experiment/{id}/file_contents": {
      "get": {
        "tags": ["experiment"],
        "summary": "Experiment Get File Contents",
        "operationId": "experiment_get_file_contents_experiment__id__file_contents_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "integer" }],
              "title": "Id"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Filename" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/plugins/gallery": {
      "get": {
        "tags": ["plugins"],
        "summary": "Display the plugins available for LLMLab to download.",
        "description": "Get list of plugins that we can access",
        "operationId": "plugin_gallery_plugins_gallery_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/plugins/gallery/{plugin_id}/install": {
      "get": {
        "tags": ["plugins"],
        "summary": "Install a plugin from the gallery.",
        "description": "Install a plugin from the gallery",
        "operationId": "install_plugin_plugins_gallery__plugin_id__install_get",
        "parameters": [
          {
            "name": "plugin_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Plugin Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/plugins/list": {
      "get": {
        "tags": ["plugins"],
        "summary": "List the plugins that are currently installed.",
        "description": "Get list of plugins that are currently installed",
        "operationId": "list_plugins_plugins_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {},
                  "type": "array",
                  "title": "Response List Plugins Plugins List Get"
                }
              }
            }
          }
        }
      }
    },
    "/plugins/list_missing_plugins_for_current_platform": {
      "get": {
        "tags": ["plugins"],
        "summary": "Returns a list of plugins that are recommended for the current platform.",
        "operationId": "list_missing_plugins_for_current_platform_plugins_list_missing_plugins_for_current_platform_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/plugins/install_missing_plugins_for_current_platform": {
      "get": {
        "tags": ["plugins"],
        "summary": "Install the default platform plugins.",
        "operationId": "install_missing_plugins_for_current_platform_plugins_install_missing_plugins_for_current_platform_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/evals/list": {
      "get": {
        "tags": ["evals"],
        "summary": "Eval Local List",
        "description": "Get the list of local evals",
        "operationId": "eval_local_list_evals_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/evals/compare_evals": {
      "get": {
        "tags": ["evals"],
        "summary": "Compare Eval",
        "description": "Compare the output of evaluations from a list of job_ids.\n\nExpects job_list to be an array of job_ids.",
        "operationId": "compare_eval_evals_compare_evals_get",
        "parameters": [
          {
            "name": "job_list",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "", "title": "Job List" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/list": {
      "get": {
        "tags": ["train"],
        "summary": "Jobs Get All",
        "operationId": "jobs_get_all_jobs_list_get",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "", "title": "Type" }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "", "title": "Status" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/delete/{job_id}": {
      "get": {
        "tags": ["train"],
        "summary": "Job Delete",
        "operationId": "job_delete_jobs_delete__job_id__get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/create": {
      "get": {
        "tags": ["train"],
        "summary": "Job Create",
        "operationId": "job_create_jobs_create_get",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "UNDEFINED",
              "title": "Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "CREATED",
              "title": "Status"
            }
          },
          {
            "name": "data",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "{}", "title": "Data" }
          },
          {
            "name": "experiment_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "-1",
              "title": "Experiment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/update/{job_id}": {
      "get": {
        "tags": ["train"],
        "summary": "Job Update",
        "operationId": "job_update_jobs_update__job_id__get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Status" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/start_next": {
      "get": {
        "tags": ["train"],
        "summary": "Start Next Job",
        "operationId": "start_next_job_jobs_start_next_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/jobs/{job_id}/stop": {
      "get": {
        "tags": ["train"],
        "summary": "Stop Job",
        "operationId": "stop_job_jobs__job_id__stop_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/delete_all": {
      "get": {
        "tags": ["train"],
        "summary": "Job Delete All",
        "operationId": "job_delete_all_jobs_delete_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/jobs/{job_id}": {
      "get": {
        "tags": ["train"],
        "summary": "Get Training Job",
        "operationId": "get_training_job_jobs__job_id__get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/{job_id}/output": {
      "get": {
        "tags": ["train"],
        "summary": "Get Training Job Output",
        "operationId": "get_training_job_output_jobs__job_id__output_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/template/{template_id}": {
      "get": {
        "tags": ["train"],
        "summary": "Get Training Template",
        "operationId": "get_training_template_jobs_template__template_id__get",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Template Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/template/update": {
      "put": {
        "tags": ["train"],
        "summary": "Update Training Template",
        "operationId": "update_training_template_jobs_template_update_put",
        "parameters": [
          {
            "name": "template_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Template Id" }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          },
          {
            "name": "description",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Description" }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Type" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_training_template_jobs_template_update_put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/{job_id}/stream_output": {
      "get": {
        "tags": ["train"],
        "summary": "Stream Job Output",
        "operationId": "stream_job_output_jobs__job_id__stream_output_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/{job_id}/stream_detailed_json_report": {
      "get": {
        "tags": ["train"],
        "summary": "Stream Detailed Json Report",
        "operationId": "stream_detailed_json_report_jobs__job_id__stream_detailed_json_report_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          },
          {
            "name": "file_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "File Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/{job_id}/get_additional_details": {
      "get": {
        "tags": ["train"],
        "summary": "Stream Job Additional Details",
        "operationId": "stream_job_additional_details_jobs__job_id__get_additional_details_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          },
          {
            "name": "task",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "view", "title": "Task" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/{job_id}/get_figure_json": {
      "get": {
        "tags": ["train"],
        "summary": "Get Figure Path",
        "operationId": "get_figure_path_jobs__job_id__get_figure_json_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/jobs/{job_id}/get_generated_dataset": {
      "get": {
        "tags": ["train"],
        "summary": "Get Generated Dataset",
        "operationId": "get_generated_dataset_jobs__job_id__get_generated_dataset_get",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Job Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflows/list": {
      "get": {
        "tags": ["workflows"],
        "summary": "Workflows Get All",
        "operationId": "workflows_get_all_workflows_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/workflows/delete/{workflow_id}": {
      "get": {
        "tags": ["workflows"],
        "summary": "Workflow Delete",
        "operationId": "workflow_delete_workflows_delete__workflow_id__get",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Workflow Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflows/delete_all": {
      "get": {
        "tags": ["workflows"],
        "summary": "Workflow Delete All",
        "operationId": "workflow_delete_all_workflows_delete_all_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/workflows/create": {
      "get": {
        "tags": ["workflows"],
        "summary": "Workflow Create",
        "operationId": "workflow_create_workflows_create_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          },
          {
            "name": "config",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "{\"nodes\":[]}",
              "title": "Config"
            }
          },
          {
            "name": "experiment_id",
            "in": "query",
            "required": false,
            "schema": { "default": "1", "title": "Experiment Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflows/create_empty": {
      "get": {
        "tags": ["workflows"],
        "summary": "Workflow Create Empty",
        "operationId": "workflow_create_empty_workflows_create_empty_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          },
          {
            "name": "experiment_id",
            "in": "query",
            "required": false,
            "schema": { "default": "1", "title": "Experiment Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflows/add_node": {
      "get": {
        "tags": ["workflows"],
        "summary": "Workflow Add Node",
        "operationId": "workflow_add_node_workflows_add_node_get",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Workflow Id" }
          },
          {
            "name": "node",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Node" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflows/export_to_yaml/{workflow_id}": {
      "get": {
        "tags": ["workflows"],
        "summary": "Workflow Export To Yaml",
        "operationId": "workflow_export_to_yaml_workflows_export_to_yaml__workflow_id__get",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Workflow Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflows/import_from_yaml": {
      "post": {
        "tags": ["workflows"],
        "summary": "Workflow Import From Yaml",
        "operationId": "workflow_import_from_yaml_workflows_import_from_yaml_post",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "query",
            "required": false,
            "schema": { "default": "1", "title": "Experiment Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_workflow_import_from_yaml_workflows_import_from_yaml_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflows/start/{workflow_id}": {
      "get": {
        "tags": ["workflows"],
        "summary": "Start Workflow",
        "operationId": "start_workflow_workflows_start__workflow_id__get",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": { "title": "Workflow Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/workflows/start_next_step": {
      "get": {
        "tags": ["workflows"],
        "summary": "Start Next Step In Workflow",
        "operationId": "start_next_step_in_workflow_workflows_start_next_step_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/config/get/{key}": {
      "get": {
        "tags": ["config"],
        "summary": "Config Get",
        "operationId": "config_get_config_get__key__get",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Key" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/config/set": {
      "get": {
        "tags": ["config"],
        "summary": "Config Set",
        "operationId": "config_set_config_set_get",
        "parameters": [
          {
            "name": "k",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "K" }
          },
          {
            "name": "v",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "V" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/prompts/list": {
      "get": {
        "tags": ["prompts"],
        "summary": "List Prompts",
        "description": "List the prompt templates available in the prompt gallery",
        "operationId": "list_prompts_prompts_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/prompts/new": {
      "post": {
        "tags": ["prompts"],
        "summary": "New Prompt",
        "description": "Create a new prompt template",
        "operationId": "new_prompt_prompts_new_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_new_prompt_prompts_new_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/prompts/delete/{prompt_id}": {
      "get": {
        "tags": ["prompts"],
        "summary": "Delete Prompt",
        "description": "Delete a prompt template",
        "operationId": "delete_prompt_prompts_delete__prompt_id__get",
        "parameters": [
          {
            "name": "prompt_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Prompt Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/tools/list": {
      "get": {
        "tags": ["tools"],
        "summary": "List the tools that are currently installed.",
        "operationId": "list_tools_tools_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {},
                  "type": "array",
                  "title": "Response List Tools Tools List Get"
                }
              }
            }
          }
        }
      }
    },
    "/tools/prompt": {
      "get": {
        "tags": ["tools"],
        "summary": "Returns a default system prompt containing a list of available tools",
        "operationId": "get_prompt_tools_prompt_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/tools/call/{tool_id}": {
      "get": {
        "tags": ["tools"],
        "summary": "Executes a tool with parameters supplied in JSON.",
        "operationId": "call_tool_tools_call__tool_id__get",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Tool Id" }
          },
          {
            "name": "params",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Params" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/batch/list": {
      "get": {
        "tags": ["batched_prompts"],
        "summary": "List Prompts",
        "description": "List the batched prompts that we have on disk",
        "operationId": "list_prompts_batch_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/batch/new": {
      "post": {
        "tags": ["batched_prompts"],
        "summary": "New Prompt",
        "description": "Create a new batched prompt",
        "operationId": "new_prompt_batch_new_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_new_prompt_batch_new_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/batch/delete/{prompt_id}": {
      "get": {
        "tags": ["batched_prompts"],
        "summary": "Delete Prompt",
        "description": "Delete a batched prompt",
        "operationId": "delete_prompt_batch_delete__prompt_id__get",
        "parameters": [
          {
            "name": "prompt_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Prompt Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/batch/chat/completions": {
      "post": {
        "tags": ["batched_prompts"],
        "summary": "Batch Chat Completion",
        "description": "Predict on a batch of prompts",
        "operationId": "batch_chat_completion_batch_chat_completions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchChatCompletionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/prompt_log": {
      "get": {
        "tags": ["chat"],
        "summary": "Get Prompt Log",
        "operationId": "get_prompt_log_prompt_log_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/v1/models": {
      "get": {
        "tags": ["chat"],
        "summary": "Show Available Models",
        "operationId": "show_available_models_v1_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/v1/chat/completions": {
      "post": {
        "tags": ["chat"],
        "summary": "Create Openapi Chat Completion",
        "description": "Creates a completion for the chat message",
        "operationId": "create_openapi_chat_completion_v1_chat_completions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChatCompletionRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/v1/completions": {
      "post": {
        "tags": ["chat"],
        "summary": "Create Completion",
        "operationId": "create_completion_v1_completions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifiedCompletionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/v1/engines/{model_name}/embeddings": {
      "post": {
        "tags": ["chat"],
        "summary": "Create Embeddings",
        "description": "Creates embeddings for the text",
        "operationId": "create_embeddings_v1_engines__model_name__embeddings_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "model_name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Model Name" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmbeddingsRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/embeddings": {
      "post": {
        "tags": ["chat"],
        "summary": "Create Embeddings",
        "description": "Creates embeddings for the text",
        "operationId": "create_embeddings_v1_embeddings_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "model_name",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Model Name" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmbeddingsRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/v1/chat/count_tokens": {
      "post": {
        "tags": ["chat"],
        "summary": "Count Chat Tokens",
        "operationId": "count_chat_tokens_v1_chat_count_tokens_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChatCompletionRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/tokenize": {
      "post": {
        "tags": ["chat"],
        "summary": "Tokenize",
        "description": "Tokenize a string and return the tokenized output as a set of input_ids and strings -- this only works\nif the worker implements the tokenize endpoint.",
        "operationId": "tokenize_tokenize_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Home",
        "operationId": "home__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/server/controller_start": {
      "get": {
        "tags": ["serverinfo"],
        "summary": "Server Controler Start",
        "operationId": "server_controler_start_server_controller_start_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/server/controller_stop": {
      "get": {
        "tags": ["serverinfo"],
        "summary": "Server Controller Stop",
        "operationId": "server_controller_stop_server_controller_stop_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/server/worker_start": {
      "get": {
        "tags": ["serverinfo"],
        "summary": "Server Worker Start",
        "operationId": "server_worker_start_server_worker_start_get",
        "parameters": [
          {
            "name": "model_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Model Name" }
          },
          {
            "name": "adaptor",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "", "title": "Adaptor" }
          },
          {
            "name": "model_filename",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Model Filename"
            }
          },
          {
            "name": "eight_bit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Eight Bit"
            }
          },
          {
            "name": "cpu_offload",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Cpu Offload"
            }
          },
          {
            "name": "inference_engine",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "default",
              "title": "Inference Engine"
            }
          },
          {
            "name": "experiment_id",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "title": "Experiment Id" }
          },
          {
            "name": "inference_params",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Inference Params"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/server/worker_stop": {
      "get": {
        "tags": ["serverinfo"],
        "summary": "Server Worker Stop",
        "operationId": "server_worker_stop_server_worker_stop_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/server/worker_healthz": {
      "get": {
        "tags": ["serverinfo"],
        "summary": "Server Worker Health",
        "operationId": "server_worker_health_server_worker_healthz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BatchChatCompletionRequest": {
        "properties": {
          "model": { "type": "string", "title": "Model" },
          "adaptor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Adaptor"
          },
          "api_key": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Api Key",
            "default": "dummy"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "default": 0.01
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens",
            "default": 1024
          },
          "top_p": { "type": "number", "title": "Top P", "default": 1.0 },
          "batch_size": {
            "type": "integer",
            "title": "Batch Size",
            "default": 128
          },
          "inference_url": {
            "type": "string",
            "title": "Inference Url",
            "default": "http://localhost:8338/v1/chat/completions"
          },
          "messages": {
            "items": { "items": { "type": "object" }, "type": "array" },
            "type": "array",
            "title": "Messages"
          }
        },
        "type": "object",
        "required": ["model", "messages"],
        "title": "BatchChatCompletionRequest"
      },
      "Body_create_training_template_train_template_create_post": {
        "properties": { "config": { "type": "string", "title": "Config" } },
        "type": "object",
        "required": ["config"],
        "title": "Body_create_training_template_train_template_create_post"
      },
      "Body_create_upload_file_data_fileupload_post": {
        "properties": {
          "files": {
            "items": { "type": "string", "format": "binary" },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["files"],
        "title": "Body_create_upload_file_data_fileupload_post"
      },
      "Body_document_upload_experiment__experimentId__documents_upload_post": {
        "properties": {
          "files": {
            "items": { "type": "string", "format": "binary" },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": ["files"],
        "title": "Body_document_upload_experiment__experimentId__documents_upload_post"
      },
      "Body_get_model_download_size_model_download_size_get": {
        "properties": {
          "allow_patterns": {
            "items": {},
            "type": "array",
            "title": "Allow Patterns",
            "default": []
          }
        },
        "type": "object",
        "title": "Body_get_model_download_size_model_download_size_get"
      },
      "Body_new_prompt_batch_new_post": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "prompts": {
            "anyOf": [
              {
                "items": { "items": { "type": "object" }, "type": "array" },
                "type": "array"
              },
              { "items": { "type": "string" }, "type": "array" }
            ],
            "title": "Prompts"
          }
        },
        "type": "object",
        "required": ["name", "prompts"],
        "title": "Body_new_prompt_batch_new_post"
      },
      "Body_new_prompt_prompts_new_post": {
        "properties": {
          "title": { "type": "string", "title": "Title" },
          "text": { "type": "string", "title": "Text" }
        },
        "type": "object",
        "required": ["title", "text"],
        "title": "Body_new_prompt_prompts_new_post"
      },
      "Body_save_conversation_experiment__experimentId__conversations_save_post": {
        "properties": {
          "conversation_id": { "type": "string", "title": "Conversation Id" },
          "conversation": { "type": "string", "title": "Conversation" }
        },
        "type": "object",
        "required": ["conversation_id", "conversation"],
        "title": "Body_save_conversation_experiment__experimentId__conversations_save_post"
      },
      "Body_update_training_template_jobs_template_update_put": {
        "properties": { "config": { "type": "string", "title": "Config" } },
        "type": "object",
        "required": ["config"],
        "title": "Body_update_training_template_jobs_template_update_put"
      },
      "Body_workflow_import_from_yaml_workflows_import_from_yaml_post": {
        "properties": {
          "file": { "type": "string", "format": "binary", "title": "File" }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_workflow_import_from_yaml_workflows_import_from_yaml_post"
      },
      "ChatCompletionRequest": {
        "properties": {
          "model": { "type": "string", "title": "Model" },
          "adaptor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Adaptor",
            "default": ""
          },
          "messages": {
            "anyOf": [
              { "type": "string" },
              {
                "items": {
                  "additionalProperties": { "type": "string" },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "items": {
                  "additionalProperties": {
                    "anyOf": [
                      { "type": "string" },
                      {
                        "items": {
                          "additionalProperties": {
                            "anyOf": [
                              { "type": "string" },
                              {
                                "additionalProperties": { "type": "string" },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    ]
                  },
                  "type": "object"
                },
                "type": "array"
              }
            ],
            "title": "Messages"
          },
          "temperature": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Temperature",
            "default": 0.7
          },
          "top_p": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Top P",
            "default": 1.0
          },
          "top_k": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Top K",
            "default": -1
          },
          "n": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "N",
            "default": 1
          },
          "max_tokens": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Max Tokens"
          },
          "stop": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Stop"
          },
          "stream": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Stream",
            "default": false
          },
          "presence_penalty": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Presence Penalty",
            "default": 0.0
          },
          "frequency_penalty": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Frequency Penalty",
            "default": 0.0
          },
          "user": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "User"
          },
          "logprobs": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Logprobs",
            "default": false
          }
        },
        "type": "object",
        "required": ["model", "messages"],
        "title": "ChatCompletionRequest"
      },
      "EmbeddingsRequest": {
        "properties": {
          "model": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Model"
          },
          "engine": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Engine"
          },
          "input": {
            "anyOf": [{ "type": "string" }, { "items": {}, "type": "array" }],
            "title": "Input"
          },
          "user": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "User"
          },
          "encoding_format": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Encoding Format"
          }
        },
        "type": "object",
        "required": ["input"],
        "title": "EmbeddingsRequest"
      },
      "ErrorResponse": {
        "properties": {
          "status": { "type": "string", "title": "Status" },
          "message": { "type": "string", "title": "Message" }
        },
        "type": "object",
        "required": ["status", "message"],
        "title": "ErrorResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ModifiedCompletionRequest": {
        "properties": {
          "model": { "type": "string", "title": "Model" },
          "prompt": {
            "anyOf": [{ "type": "string" }, { "items": {}, "type": "array" }],
            "title": "Prompt"
          },
          "suffix": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Suffix"
          },
          "temperature": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Temperature",
            "default": 0.7
          },
          "n": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "N",
            "default": 1
          },
          "max_tokens": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Max Tokens",
            "default": 16
          },
          "stop": {
            "anyOf": [
              { "type": "string" },
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Stop"
          },
          "stream": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Stream",
            "default": false
          },
          "top_p": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Top P",
            "default": 1.0
          },
          "top_k": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Top K",
            "default": -1
          },
          "logprobs": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Logprobs"
          },
          "echo": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Echo",
            "default": false
          },
          "presence_penalty": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Presence Penalty",
            "default": 0.0
          },
          "frequency_penalty": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Frequency Penalty",
            "default": 0.0
          },
          "user": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "User"
          },
          "use_beam_search": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Use Beam Search",
            "default": false
          },
          "best_of": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Best Of"
          },
          "adaptor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Adaptor",
            "default": ""
          }
        },
        "type": "object",
        "required": ["model", "prompt"],
        "title": "ModifiedCompletionRequest"
      },
      "SuccessResponse": {
        "properties": {
          "status": { "type": "string", "title": "Status" },
          "data": { "type": "object", "title": "Data" }
        },
        "type": "object",
        "required": ["status", "data"],
        "title": "SuccessResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": { "HTTPBearer": { "type": "http", "scheme": "bearer" } }
  },
  "tags": [
    {
      "name": "datasets",
      "description": "Actions used to manage the datasets used by Transformer Lab."
    },
    { "name": "train", "description": "Actions for training models." },
    {
      "name": "experiment",
      "descriptions": "Actions for managinging experiments."
    },
    {
      "name": "model",
      "description": "Actions for interacting with huggingface models"
    },
    {
      "name": "serverinfo",
      "description": "Actions for interacting with the Transformer Lab server."
    }
  ]
}
